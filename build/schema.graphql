type Ask @entity(immutable: false) {
  id: ID!
  tokenContract: Bytes! # address
  tokenId: BigInt! # uint256
  ask_live: Boolean! # bool
  buyer: Bytes! # address
  finder: Bytes! # address
  ask_seller: Bytes! # address
  ask_sellerFundsRecipient: Bytes! # address
  ask_askCurrency: Bytes! # address
  ask_findersFeeBps: Int! # uint16
  ask_askPrice: BigInt! # uint256
  ask_events: [AskEvent!]! @derivedFrom(field: "ask")
}

type AskEvent @entity (immutable: false) {
  id: ID!
  eventType: AskEventType
  time: BigInt!
  ask: Ask!
}

enum AskEventType {
  ASK_CREATED
  ASK_CANCELED
  ASK_PRICE_UPDATED
  ASK_FILLED
}

type Offer @entity(immutable: false) {
  id: ID!
  tokenContract: Bytes! # address
  tokenId: BigInt! # uint256
  offer_live: Boolean! # bool
  offer_id: BigInt! # uint256
  taker: Bytes! # address
  finder: Bytes! # address
  offer_maker: Bytes! # address
  offer_currency: Bytes! # address
  offer_findersFeeBps: Int! # uint16
  offer_amount: BigInt! # uint256
  offer_events: [OfferEvent!]! @derivedFrom(field: "offer")

}

type OfferEvent @entity (immutable: false) {
  id: ID!
  eventType: OfferEventType
  time: BigInt!
  offer: Offer!
}

enum OfferEventType {
  OFFER_CREATED
  OFFER_CANCELED
  OFFER_PRICE_UPDATED
  OFFER_FILLED
}
