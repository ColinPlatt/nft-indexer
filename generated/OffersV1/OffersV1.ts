// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ExchangeExecuted extends ethereum.Event {
  get params(): ExchangeExecuted__Params {
    return new ExchangeExecuted__Params(this);
  }
}

export class ExchangeExecuted__Params {
  _event: ExchangeExecuted;

  constructor(event: ExchangeExecuted) {
    this._event = event;
  }

  get userA(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get userB(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get a(): ExchangeExecutedAStruct {
    return changetype<ExchangeExecutedAStruct>(
      this._event.parameters[2].value.toTuple()
    );
  }

  get b(): ExchangeExecutedBStruct {
    return changetype<ExchangeExecutedBStruct>(
      this._event.parameters[3].value.toTuple()
    );
  }
}

export class ExchangeExecutedAStruct extends ethereum.Tuple {
  get tokenContract(): Address {
    return this[0].toAddress();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }
}

export class ExchangeExecutedBStruct extends ethereum.Tuple {
  get tokenContract(): Address {
    return this[0].toAddress();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }
}

export class OfferCanceled extends ethereum.Event {
  get params(): OfferCanceled__Params {
    return new OfferCanceled__Params(this);
  }
}

export class OfferCanceled__Params {
  _event: OfferCanceled;

  constructor(event: OfferCanceled) {
    this._event = event;
  }

  get tokenContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get id(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get offer(): OfferCanceledOfferStruct {
    return changetype<OfferCanceledOfferStruct>(
      this._event.parameters[3].value.toTuple()
    );
  }
}

export class OfferCanceledOfferStruct extends ethereum.Tuple {
  get maker(): Address {
    return this[0].toAddress();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get findersFeeBps(): i32 {
    return this[2].toI32();
  }

  get amount(): BigInt {
    return this[3].toBigInt();
  }
}

export class OfferCreated extends ethereum.Event {
  get params(): OfferCreated__Params {
    return new OfferCreated__Params(this);
  }
}

export class OfferCreated__Params {
  _event: OfferCreated;

  constructor(event: OfferCreated) {
    this._event = event;
  }

  get tokenContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get id(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get offer(): OfferCreatedOfferStruct {
    return changetype<OfferCreatedOfferStruct>(
      this._event.parameters[3].value.toTuple()
    );
  }
}

export class OfferCreatedOfferStruct extends ethereum.Tuple {
  get maker(): Address {
    return this[0].toAddress();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get findersFeeBps(): i32 {
    return this[2].toI32();
  }

  get amount(): BigInt {
    return this[3].toBigInt();
  }
}

export class OfferFilled extends ethereum.Event {
  get params(): OfferFilled__Params {
    return new OfferFilled__Params(this);
  }
}

export class OfferFilled__Params {
  _event: OfferFilled;

  constructor(event: OfferFilled) {
    this._event = event;
  }

  get tokenContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get id(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get taker(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get finder(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get offer(): OfferFilledOfferStruct {
    return changetype<OfferFilledOfferStruct>(
      this._event.parameters[5].value.toTuple()
    );
  }
}

export class OfferFilledOfferStruct extends ethereum.Tuple {
  get maker(): Address {
    return this[0].toAddress();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get findersFeeBps(): i32 {
    return this[2].toI32();
  }

  get amount(): BigInt {
    return this[3].toBigInt();
  }
}

export class OfferUpdated extends ethereum.Event {
  get params(): OfferUpdated__Params {
    return new OfferUpdated__Params(this);
  }
}

export class OfferUpdated__Params {
  _event: OfferUpdated;

  constructor(event: OfferUpdated) {
    this._event = event;
  }

  get tokenContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get id(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get offer(): OfferUpdatedOfferStruct {
    return changetype<OfferUpdatedOfferStruct>(
      this._event.parameters[3].value.toTuple()
    );
  }
}

export class OfferUpdatedOfferStruct extends ethereum.Tuple {
  get maker(): Address {
    return this[0].toAddress();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get findersFeeBps(): i32 {
    return this[2].toI32();
  }

  get amount(): BigInt {
    return this[3].toBigInt();
  }
}

export class RoyaltyPayout extends ethereum.Event {
  get params(): RoyaltyPayout__Params {
    return new RoyaltyPayout__Params(this);
  }
}

export class RoyaltyPayout__Params {
  _event: RoyaltyPayout;

  constructor(event: RoyaltyPayout) {
    this._event = event;
  }

  get tokenContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get recipient(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OffersV1__offersResult {
  value0: Address;
  value1: Address;
  value2: i32;
  value3: BigInt;

  constructor(value0: Address, value1: Address, value2: i32, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getMaker(): Address {
    return this.value0;
  }

  getCurrency(): Address {
    return this.value1;
  }

  getFindersFeeBps(): i32 {
    return this.value2;
  }

  getAmount(): BigInt {
    return this.value3;
  }
}

export class OffersV1 extends ethereum.SmartContract {
  static bind(address: Address): OffersV1 {
    return new OffersV1("OffersV1", address);
  }

  erc20TransferHelper(): Address {
    let result = super.call(
      "erc20TransferHelper",
      "erc20TransferHelper():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_erc20TransferHelper(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "erc20TransferHelper",
      "erc20TransferHelper():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  erc721TransferHelper(): Address {
    let result = super.call(
      "erc721TransferHelper",
      "erc721TransferHelper():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_erc721TransferHelper(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "erc721TransferHelper",
      "erc721TransferHelper():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  offerCount(): BigInt {
    let result = super.call("offerCount", "offerCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_offerCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("offerCount", "offerCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  offers(
    param0: Address,
    param1: BigInt,
    param2: BigInt
  ): OffersV1__offersResult {
    let result = super.call(
      "offers",
      "offers(address,uint256,uint256):(address,address,uint16,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );

    return new OffersV1__offersResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toI32(),
      result[3].toBigInt()
    );
  }

  try_offers(
    param0: Address,
    param1: BigInt,
    param2: BigInt
  ): ethereum.CallResult<OffersV1__offersResult> {
    let result = super.tryCall(
      "offers",
      "offers(address,uint256,uint256):(address,address,uint16,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OffersV1__offersResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toI32(),
        value[3].toBigInt()
      )
    );
  }

  offersForNFT(param0: Address, param1: BigInt, param2: BigInt): BigInt {
    let result = super.call(
      "offersForNFT",
      "offersForNFT(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );

    return result[0].toBigInt();
  }

  try_offersForNFT(
    param0: Address,
    param1: BigInt,
    param2: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "offersForNFT",
      "offersForNFT(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  registrar(): Address {
    let result = super.call("registrar", "registrar():(address)", []);

    return result[0].toAddress();
  }

  try_registrar(): ethereum.CallResult<Address> {
    let result = super.tryCall("registrar", "registrar():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _erc20TransferHelper(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _erc721TransferHelper(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _royaltyEngine(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _protocolFeeSettings(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _wethAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class _handleRoyaltyEnginePayoutCall extends ethereum.Call {
  get inputs(): _handleRoyaltyEnginePayoutCall__Inputs {
    return new _handleRoyaltyEnginePayoutCall__Inputs(this);
  }

  get outputs(): _handleRoyaltyEnginePayoutCall__Outputs {
    return new _handleRoyaltyEnginePayoutCall__Outputs(this);
  }
}

export class _handleRoyaltyEnginePayoutCall__Inputs {
  _call: _handleRoyaltyEnginePayoutCall;

  constructor(call: _handleRoyaltyEnginePayoutCall) {
    this._call = call;
  }

  get _tokenContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _payoutCurrency(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class _handleRoyaltyEnginePayoutCall__Outputs {
  _call: _handleRoyaltyEnginePayoutCall;

  constructor(call: _handleRoyaltyEnginePayoutCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CancelOfferCall extends ethereum.Call {
  get inputs(): CancelOfferCall__Inputs {
    return new CancelOfferCall__Inputs(this);
  }

  get outputs(): CancelOfferCall__Outputs {
    return new CancelOfferCall__Outputs(this);
  }
}

export class CancelOfferCall__Inputs {
  _call: CancelOfferCall;

  constructor(call: CancelOfferCall) {
    this._call = call;
  }

  get _tokenContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _offerId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CancelOfferCall__Outputs {
  _call: CancelOfferCall;

  constructor(call: CancelOfferCall) {
    this._call = call;
  }
}

export class CreateOfferCall extends ethereum.Call {
  get inputs(): CreateOfferCall__Inputs {
    return new CreateOfferCall__Inputs(this);
  }

  get outputs(): CreateOfferCall__Outputs {
    return new CreateOfferCall__Outputs(this);
  }
}

export class CreateOfferCall__Inputs {
  _call: CreateOfferCall;

  constructor(call: CreateOfferCall) {
    this._call = call;
  }

  get _tokenContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _currency(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _findersFeeBps(): i32 {
    return this._call.inputValues[4].value.toI32();
  }
}

export class CreateOfferCall__Outputs {
  _call: CreateOfferCall;

  constructor(call: CreateOfferCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class FillOfferCall extends ethereum.Call {
  get inputs(): FillOfferCall__Inputs {
    return new FillOfferCall__Inputs(this);
  }

  get outputs(): FillOfferCall__Outputs {
    return new FillOfferCall__Outputs(this);
  }
}

export class FillOfferCall__Inputs {
  _call: FillOfferCall;

  constructor(call: FillOfferCall) {
    this._call = call;
  }

  get _tokenContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _offerId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _currency(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _finder(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class FillOfferCall__Outputs {
  _call: FillOfferCall;

  constructor(call: FillOfferCall) {
    this._call = call;
  }
}

export class SetOfferAmountCall extends ethereum.Call {
  get inputs(): SetOfferAmountCall__Inputs {
    return new SetOfferAmountCall__Inputs(this);
  }

  get outputs(): SetOfferAmountCall__Outputs {
    return new SetOfferAmountCall__Outputs(this);
  }
}

export class SetOfferAmountCall__Inputs {
  _call: SetOfferAmountCall;

  constructor(call: SetOfferAmountCall) {
    this._call = call;
  }

  get _tokenContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _offerId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _currency(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class SetOfferAmountCall__Outputs {
  _call: SetOfferAmountCall;

  constructor(call: SetOfferAmountCall) {
    this._call = call;
  }
}

export class SetRoyaltyEngineAddressCall extends ethereum.Call {
  get inputs(): SetRoyaltyEngineAddressCall__Inputs {
    return new SetRoyaltyEngineAddressCall__Inputs(this);
  }

  get outputs(): SetRoyaltyEngineAddressCall__Outputs {
    return new SetRoyaltyEngineAddressCall__Outputs(this);
  }
}

export class SetRoyaltyEngineAddressCall__Inputs {
  _call: SetRoyaltyEngineAddressCall;

  constructor(call: SetRoyaltyEngineAddressCall) {
    this._call = call;
  }

  get _royaltyEngine(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRoyaltyEngineAddressCall__Outputs {
  _call: SetRoyaltyEngineAddressCall;

  constructor(call: SetRoyaltyEngineAddressCall) {
    this._call = call;
  }
}
